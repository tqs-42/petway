{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var login = function login() {\n    fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        var data = response.json();\n        data.then(function (data) {\n          AsyncStorage.setItem(\"current_user\", JSON.stringify(data));\n          setCurrentUser(data);\n          setProcessing(false);\n        });\n      } else {\n        Alert.alert(\"Incorrect credentials\");\n        setProcessing(false);\n      }\n    }).catch(function () {\n      Alert.alert(\"A communication error ocurred\");\n      setProcessing(false);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"EasyDeliver\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        children: \"LOGIN\"\n      })\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#008080\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 32,\n    fontFamily: 'lucida grande',\n    fontWeight: \"bold\",\n    color: \"#CCCCFF\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 100\n  },\n  inputView: {\n    backgroundColor: \"#CCCCFF\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#89CFF0\"\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","LoginScreen","navigation","email","setEmail","password","setPassword","error","setError","login","fetch","method","headers","body","JSON","stringify","then","response","ok","data","json","AsyncStorage","setItem","setCurrentUser","setProcessing","Alert","alert","catch","styles","container","title","inputView","TextInput","loginBtn","loginText","navigate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontFamily","fontWeight","color","marginBottom","borderRadius","width","height","padding","marginLeft","forgot_button","marginTop"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/src/screens/LoginScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\n\nconst LoginScreen = ({ navigation }) => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const login = () => {\n    fetch(`http://localhost:8000/login`, {\n      method: \"POST\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    })\n      .then((response) => {\n        if (response.ok) {\n          let data = response.json()\n          data.then((data) => {\n            //SecureStore.setItemAsync(\"current_user\", JSON.stringify(data))\n            AsyncStorage.setItem(\"current_user\", JSON.stringify(data))\n            setCurrentUser(data)\n            setProcessing(false)\n          }\n          )\n        }\n        else {\n          Alert.alert(\"Incorrect credentials\")\n          setProcessing(false)\n        }\n      })\n      .catch(() => {\n        Alert.alert(\"A communication error ocurred\")\n        setProcessing(false)\n      })\n  }\n\n  return (\n    <View style={styles.container}>\n\n      <Text style={styles.title}>EasyDeliver</Text>\n\n      <StatusBar style=\"auto\" />\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Email\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(email) => setEmail(email)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Password\"\n          placeholderTextColor=\"#003f5c\"\n          secureTextEntry={true}\n          onChangeText={(password) => setPassword(password)}\n        />\n      </View>\n\n      <TouchableOpacity style={styles.loginBtn}>\n        <Text style={styles.loginText} onPress={() => navigation.navigate('Home')}>LOGIN</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n}\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    backgroundColor: \"#008080\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  title: {\n    fontSize: 32,\n    fontFamily: 'lucida grande',\n    fontWeight: \"bold\",\n    color: \"#CCCCFF\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 100,\n  },\n\n  inputView: {\n    backgroundColor: \"#CCCCFF\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n\n    alignItems: \"center\",\n  },\n\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n  },\n\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#89CFF0\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}