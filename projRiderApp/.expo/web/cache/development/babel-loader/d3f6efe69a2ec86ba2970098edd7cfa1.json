{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { set } from 'react-native-reanimated';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DeliveryScreen = function DeliveryScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      result = _useState6[0],\n      setResult = _useState6[1];\n\n  var delivery = route.params.delivery;\n  useFocusEffect(React.useCallback(function () {\n    function getRiderInfo() {\n      var data;\n      return _regeneratorRuntime.async(function getRiderInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 2:\n              data = _context.sent;\n              data = JSON.parse(data);\n              setUser(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getRiderInfo();\n  }, []));\n  useEffect(function () {\n    if (user == null) return;\n    getData();\n  }, user);\n\n  var getData = function getData() {\n    var result = [];\n    fetch(\"http://localhost:6869/deliveries/delivery?id=\" + delivery.id, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': 'Bearer ' + user.token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"deliveries PEDIDOOOOOO\", data);\n      var array = [];\n      array.push(data);\n      array.map(function (info) {\n        result.push(_jsxs(Text, {\n          style: styles.title,\n          children: [\"Delivery No.: \", delivery.id]\n        }));\n        result.push(_jsxs(Text, {\n          style: styles.info,\n          children: [\"Store: \", delivery.store.name]\n        }));\n        result.push(_jsxs(Text, {\n          style: styles.info,\n          children: [\"Store address: \", delivery.store.latitude]\n        }));\n        result.push(_jsxs(Text, {\n          style: styles.info,\n          children: [\"Status: \", info.event.status]\n        }));\n        result.push(_jsxs(Text, {\n          style: styles.info,\n          children: [\"Date: \", info.event.timestamp]\n        }));\n        if (info.event.status == \"PENDING\") result.push(_jsx(Button, {\n          style: styles.info,\n          onPress: function onPress() {\n            return changeStatus(\"PROCESSING\");\n          },\n          title: \"ACCEPT\"\n        }));\n        if (info.event.status == \"PROCESSING\") result.push(_jsx(Button, {\n          style: styles.info,\n          onPress: function onPress() {\n            return changeStatus(\"DELIVERING\");\n          },\n          title: \"DELIVERING\"\n        }));\n        if (info.event.status == \"DELIVERING\") result.push(_jsx(Button, {\n          style: styles.info,\n          onPress: function onPress() {\n            return changeStatus(\"DELIVERED\");\n          },\n          title: \"DELIVERED\"\n        }));\n      });\n      setResult(result);\n    });\n  };\n\n  function changeStatus(newStatus) {\n    var httpOptions;\n    return _regeneratorRuntime.async(function changeStatus$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"new status\", newStatus);\n            console.log(\"TOKEN\", user.token);\n            httpOptions = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Authorization': 'Bearer ' + user.token\n              },\n              body: JSON.stringify({\n                id: delivery.id,\n                status: newStatus\n              })\n            };\n            fetch(\"http://localhost:6869/deliveries/deliveryUpdate\", httpOptions).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              getData();\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: result\n  });\n};\n\nexport default DeliveryScreen;\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    marginBottom: 20\n  },\n  info: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","AsyncStorage","useFocusEffect","set","DeliveryScreen","navigation","route","info","setInfo","user","setUser","result","setResult","delivery","params","useCallback","getRiderInfo","getItem","data","JSON","parse","getData","fetch","id","headers","token","then","response","json","console","log","array","push","map","styles","title","store","name","latitude","event","status","timestamp","changeStatus","newStatus","httpOptions","method","body","stringify","container","StyleSheet","create","fontSize","marginBottom","alignItems","justifyContent","flex","padding","paddingTop","paddingBottom","backgroundColor"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/src/screens/DeliveryScreen.js"],"sourcesContent":["\n\n\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Button, StyleSheet, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { set } from 'react-native-reanimated';\n\n\nconst DeliveryScreen = ({ navigation, route }) => {\n\n  const [info, setInfo] = useState(null);\n  const [user, setUser] = useState(null);\n  const [result, setResult] = useState(null);\n  \n  const delivery  = route.params.delivery;\n\n  useFocusEffect(\n    React.useCallback(() => {\n\n      async function getRiderInfo() {\n        let data = await AsyncStorage.getItem(\"user\")\n        data = JSON.parse(data)\n\n        setUser(data)\n      }\n\n      getRiderInfo()\n    }, [])\n  );\n\n  useEffect(()=>{\n    if (user == null)\n      return\n      \n    getData()\n  }, user)\n\n  const getData = () => {\n    let result = []\n    fetch(\n      `http://localhost:6869/deliveries/delivery?id=`+delivery.id,\n      {\n        headers: { \n                   'Access-Control-Allow-Origin': '*',\n                   'Authorization' : 'Bearer ' + user.token,\n                  }\n      }\n    )\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"deliveries PEDIDOOOOOO\", data)\n        let array = []\n        array.push(data)\n        array.map((info) => {\n          result.push(<Text style={styles.title}>Delivery No.: {delivery.id}</Text>)\n          result.push(<Text style={styles.info}>Store: {delivery.store.name}</Text>)\n          result.push(<Text style={styles.info}>Store address: {delivery.store.latitude}</Text>)\n          result.push(<Text style={styles.info}>Status: {info.event.status}</Text>)\n          result.push(<Text style={styles.info}>Date: {info.event.timestamp}</Text>)\n\n          if (info.event.status == \"PENDING\") result.push(<Button style={styles.info} onPress={() => changeStatus(\"PROCESSING\")} title=\"ACCEPT\"/>)\n          if (info.event.status == \"PROCESSING\") result.push(<Button style={styles.info} onPress={() => changeStatus(\"DELIVERING\")} title=\"DELIVERING\"/>)\n          if (info.event.status == \"DELIVERING\") result.push(<Button style={styles.info} onPress={() => changeStatus(\"DELIVERED\")} title=\"DELIVERED\"/>)\n          \n        })\n\n        setResult(result)\n\n\n      })\n  }\n\n  async function changeStatus(newStatus) {\n\n    console.log(\"new status\", newStatus)\n    console.log(\"TOKEN\", user.token)\n\n    const httpOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*', 'Authorization' : 'Bearer ' + user.token },\n      body: JSON.stringify({ id : delivery.id, status : newStatus })\n    };\n\n    fetch(\"http://localhost:6869/deliveries/deliveryUpdate\", httpOptions)\n    .then(response => response.json())\n    .then(data => {\n      getData()\n    })\n\n  }\n\n  return (\n    <View style={styles.container}>\n\n      {result}\n      \n    </View>\n  );\n};\n\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    marginBottom: 20,\n  },\n  info: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n      flex: 1,\n      padding: 20,\n      paddingTop: 20,\n      paddingBottom: 20,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}