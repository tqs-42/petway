{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { set } from 'react-native-reanimated';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DeliveryScreen = function DeliveryScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var delivery = route.params.delivery;\n  useEffect(function () {\n    var result = [];\n\n    function getRiderInfo() {\n      var data;\n      return _regeneratorRuntime.async(function getRiderInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 2:\n              data = _context.sent;\n              data = JSON.parse(data);\n              console.log(\"fetching data --> \", data.token);\n              fetchData(data.token);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getRiderInfo();\n\n    function fetchData(token) {\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              fetch(\"http://localhost:6869/deliveries/delivery?id=\" + delivery.id, {\n                headers: {\n                  'Access-Control-Allow-Origin': '*',\n                  'Authorization': 'Bearer ' + token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                console.log(\"deliveries PEDIDOOOOOO\", data);\n                var array = [];\n                array.push(data);\n                array.map(function (info) {\n                  result.push(_jsxs(Text, {\n                    style: styles.title,\n                    children: [\"Delivery No.: \", delivery.id]\n                  }));\n                  result.push(_jsxs(Text, {\n                    style: styles.info,\n                    children: [\"Store: \", delivery.store.name]\n                  }));\n                  result.push(_jsxs(Text, {\n                    style: styles.info,\n                    children: [\"Store address: \", delivery.store.latitude]\n                  }));\n                  result.push(_jsxs(Text, {\n                    style: styles.info,\n                    children: [\"Status: \", info.event.status]\n                  }));\n                  result.push(_jsxs(Text, {\n                    style: styles.info,\n                    children: [\"Date: \", info.event.timestamp]\n                  }));\n                  if (info.event.status == \"PENDING\") result.push(_jsx(Button, {\n                    style: styles.info,\n                    onPress: function onPress() {\n                      return changeStatus(\"PROCESSING\");\n                    },\n                    title: \"ACCEPT\"\n                  }));\n                  if (info.event.status == \"PROCESSING\") result.push(_jsx(Button, {\n                    style: styles.info,\n                    onPress: function onPress() {\n                      return changeStatus(\"DELIVERING\");\n                    },\n                    title: \"DELIVERING\"\n                  }));\n                  if (info.event.status == \"DELIVERING\") result.push(_jsx(Button, {\n                    style: styles.info,\n                    onPress: function onPress() {\n                      return changeStatus(\"DELIVERED\");\n                    },\n                    title: \"DELIVERED\"\n                  }));\n                });\n                setInfo(result);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []);\n\n  var changeStatus = function changeStatus(newStatus) {\n    console.log(\"new status\", newStatus);\n    var httpOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        id: delivery.id,\n        status: newStatus\n      })\n    };\n    fetch(\"http://localhost:6869/deliveries/deliveryUpdate\", httpOptions).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      getRiderInfo();\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: info\n  });\n};\n\nexport default DeliveryScreen;\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    marginBottom: 20\n  },\n  info: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","AsyncStorage","useFocusEffect","set","DeliveryScreen","navigation","route","info","setInfo","delivery","params","result","getRiderInfo","getItem","data","JSON","parse","console","log","token","fetchData","fetch","id","headers","then","response","json","array","push","map","styles","title","store","name","latitude","event","status","timestamp","changeStatus","newStatus","httpOptions","method","body","stringify","container","StyleSheet","create","fontSize","marginBottom","alignItems","justifyContent","flex","padding","paddingTop","paddingBottom","backgroundColor"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/src/screens/DeliveryScreen.js"],"sourcesContent":["\n\n\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Button, StyleSheet, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { set } from 'react-native-reanimated';\n\n\nconst DeliveryScreen = ({ navigation, route }) => {\n\n  const [info, setInfo] = useState(null);\n  \n  const delivery  = route.params.delivery;\n\n  useEffect(()=>{\n\n    let result = [];\n\n    async function getRiderInfo() {\n      let data = await AsyncStorage.getItem(\"user\")\n      data = JSON.parse(data)\n      console.log(\"fetching data --> \", data.token)\n      fetchData(data.token)\n    }\n\n    getRiderInfo()\n\n    async function fetchData(token) {\n\n      fetch(\n        `http://localhost:6869/deliveries/delivery?id=`+delivery.id,\n        {\n          headers: { \n                     'Access-Control-Allow-Origin': '*',\n                     'Authorization' : 'Bearer ' + token,\n                    }\n        }\n      )\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"deliveries PEDIDOOOOOO\", data)\n          let array = []\n          array.push(data)\n          array.map((info) => {\n            result.push(<Text style={styles.title}>Delivery No.: {delivery.id}</Text>)\n            result.push(<Text style={styles.info}>Store: {delivery.store.name}</Text>)\n            result.push(<Text style={styles.info}>Store address: {delivery.store.latitude}</Text>)\n            result.push(<Text style={styles.info}>Status: {info.event.status}</Text>)\n            result.push(<Text style={styles.info}>Date: {info.event.timestamp}</Text>)\n\n            if (info.event.status == \"PENDING\") result.push(<Button style={styles.info} onPress={() => changeStatus(\"PROCESSING\")} title=\"ACCEPT\"/>)\n            if (info.event.status == \"PROCESSING\") result.push(<Button style={styles.info} onPress={() => changeStatus(\"DELIVERING\")} title=\"DELIVERING\"/>)\n            if (info.event.status == \"DELIVERING\") result.push(<Button style={styles.info} onPress={() => changeStatus(\"DELIVERED\")} title=\"DELIVERED\"/>)\n            \n          })\n\n          setInfo(result)\n\n\n        })\n    }\n  }, [])\n\n  const changeStatus = (newStatus) => {\n\n    console.log(\"new status\", newStatus)\n\n    const httpOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n      body: JSON.stringify({ id : delivery.id, status : newStatus })\n    };\n\n    fetch(\"http://localhost:6869/deliveries/deliveryUpdate\", httpOptions)\n    .then(response => response.json())\n    .then(data => {\n      getRiderInfo()\n    })\n\n  }\n\n  return (\n    <View style={styles.container}>\n\n      {info}\n      \n    </View>\n  );\n};\n\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    marginBottom: 20,\n  },\n  info: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n      flex: 1,\n      padding: 20,\n      paddingTop: 20,\n      paddingBottom: 20,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}