{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HistoryScreen = function HistoryScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      deliveries = _useState2[0],\n      setDeliveries = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  useFocusEffect(React.useCallback(function () {\n    function getRiderInfo() {\n      var data;\n      return _regeneratorRuntime.async(function getRiderInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 2:\n              data = _context.sent;\n              data = JSON.parse(data);\n              fetchData(data.email, data.token);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getRiderInfo();\n\n    function fetchData(email, token) {\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              fetch(\"http://localhost:6869/deliveries/riderDeliveries?email=\" + email, {\n                headers: {\n                  'Access-Control-Allow-Origin': '*',\n                  'Authorization': 'Bearer ' + token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                console.log(\"deliveries\", data);\n                setDeliveries(data);\n              }).catch(function (reason) {\n                setError(true);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []));\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Your Deliveries\"\n    }), deliveries == null ? _jsx(Text, {\n      children: \"You have no deliveries\"\n    }) : _jsx(Deliveries, {\n      deliveries: deliveries\n    })]\n  });\n};\n\nexport default HistoryScreen;\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 32\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","HistoryScreen","deliveries","setDeliveries","error","setError","useFocusEffect","useCallback","getRiderInfo","AsyncStorage","getItem","data","JSON","parse","fetchData","email","token","fetch","headers","then","response","json","console","log","catch","reason","styles","container","title","StyleSheet","create","fontSize","flex","padding","paddingTop","paddingBottom","backgroundColor","alignItems","justifyContent"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/src/screens/HistoryScreen.js"],"sourcesContent":["\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Button, StyleSheet, StatusBar } from 'react-native';\n\nconst HistoryScreen = () => {\n\n  const [deliveries, setDeliveries] = useState(null);\n  const [error, setError] = useState(false);\n\n  // fetch data from the API\n  useFocusEffect(\n    React.useCallback(() => {\n\n      async function getRiderInfo() {\n        let data = await AsyncStorage.getItem(\"user\")\n        data = JSON.parse(data)\n        fetchData(data.email,data.token)\n      }\n\n      getRiderInfo()\n\n      async function fetchData(email,token) {\n\n        fetch(\n          `http://localhost:6869/deliveries/riderDeliveries?email=${email}`,\n          {\n            headers: { \n                       'Access-Control-Allow-Origin': '*',\n                       'Authorization' : 'Bearer ' + token,\n                      }\n          }\n        )\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"deliveries\", data)\n            setDeliveries(data)\n          })\n          .catch((reason) => {\n            setError(true)\n          })\n      }\n\n    }, [])\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Your Deliveries</Text>\n      {\n        deliveries == null ?\n\n          <Text>You have no deliveries</Text>\n\n          :\n\n          <Deliveries deliveries={deliveries} />\n\n        }\n    </View >\n\n  );\n};\n\n\nexport default HistoryScreen;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32\n  },\n  container: {\n      flex: 1,\n      padding: 20,\n      paddingTop: 20,\n      paddingBottom: 20,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n  }\n});\n"],"mappings":";;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAE1B,gBAAoCD,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOE,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA0BH,QAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAGAC,cAAc,CACZR,KAAK,CAACS,WAAN,CAAkB,YAAM;IAEtB,SAAeC,YAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACmBC,YAAY,CAACC,OAAb,CAAqB,MAArB,CADnB;;YAAA;cACMC,IADN;cAEEA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;cACAG,SAAS,CAACH,IAAI,CAACI,KAAN,EAAYJ,IAAI,CAACK,KAAjB,CAAT;;YAHF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAMAR,YAAY;;IAEZ,SAAeM,SAAf,CAAyBC,KAAzB,EAA+BC,KAA/B;MAAA;QAAA;UAAA;YAAA;cAEEC,KAAK,6DACuDF,KADvD,EAEH;gBACEG,OAAO,EAAE;kBACE,+BAA+B,GADjC;kBAEE,iBAAkB,YAAYF;gBAFhC;cADX,CAFG,CAAL,CASGG,IATH,CASQ,UAAAC,QAAQ;gBAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;cAAA,CAThB,EAUGF,IAVH,CAUQ,UAAAR,IAAI,EAAI;gBACZW,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,IAA1B;gBACAR,aAAa,CAACQ,IAAD,CAAb;cACD,CAbH,EAcGa,KAdH,CAcS,UAACC,MAAD,EAAY;gBACjBpB,QAAQ,CAAC,IAAD,CAAR;cACD,CAhBH;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAqBD,CA/BD,EA+BG,EA/BH,CADY,CAAd;EAmCA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEqB,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,KAApB;MAAA;IAAA,EADF,EAGI1B,UAAU,IAAI,IAAd,GAEE,KAAC,IAAD;MAAA;IAAA,EAFF,GAME,KAAC,UAAD;MAAY,UAAU,EAAEA;IAAxB,EATN;EAAA,EADF;AAgBD,CAzDD;;AA4DA,eAAeD,aAAf;AAEA,IAAMyB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BF,KAAK,EAAE;IACLG,QAAQ,EAAE;EADL,CADwB;EAI/BJ,SAAS,EAAE;IACPK,IAAI,EAAE,CADC;IAEPC,OAAO,EAAE,EAFF;IAGPC,UAAU,EAAE,EAHL;IAIPC,aAAa,EAAE,EAJR;IAKPC,eAAe,EAAE,MALV;IAMPC,UAAU,EAAE,QANL;IAOPC,cAAc,EAAE;EAPT;AAJoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}