{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport React, { useState } from \"react\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Requests from \"./src/screens/Requests\";\nimport History from \"./src/screens/History\";\nimport Login from \"./src/screens/Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigationView = function TabNavigationView() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Requests\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Requests\",\n      component: Requests\n    }), _jsx(Tab.Screen, {\n      name: \"History\",\n      component: History\n    })]\n  });\n};\n\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Menus\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Menus\",\n        component: TabNavigationView\n      }), _jsx(Stack.Screen, {\n        name: \"Delivery\",\n        component: Login,\n        options: function options(_ref) {\n          var route = _ref.route;\n          return {\n            headerShown: true,\n            title: \"Delivery #\" + route.params.deliveryId\n          };\n        }\n      })]\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","createAppContainer","createStackNavigator","React","useState","createNativeStackNavigator","NavigationContainer","createBottomTabNavigator","Requests","History","Login","Tab","TabNavigationView","headerShown","Stack","App","route","title","params","deliveryId","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport React, { useState } from \"react\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport Requests from \"./src/screens/Requests\";\nimport History from \"./src/screens/History\";\nimport Login from \"./src/screens/Login\";\n\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigationView = () => {\n  return(\n    <Tab.Navigator initialRouteName='Requests' screenOptions={{ headerShown: false }}  >\n      <Tab.Screen name=\"Requests\" component={Requests} />\n      <Tab.Screen name=\"History\" component={History} />\n    </Tab.Navigator>\n  )\n}\n\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Menus' screenOptions={{ headerShown: false }} >\n        <Stack.Screen name='Menus' component={TabNavigationView} />\n        <Stack.Screen\n          name=\"Delivery\"\n          component={Login}\n          options={({ route }) => ({ headerShown: true, title: `Delivery #${route.params.deliveryId}` })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n\n\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;;;;AAUA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;;AAEA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EAC9B,OACE,MAAC,GAAD,CAAK,SAAL;IAAe,gBAAgB,EAAC,UAAhC;IAA2C,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAf,CAA1D;IAAA,WACE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,UAAjB;MAA4B,SAAS,EAAEL;IAAvC,EADF,EAEE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,SAAjB;MAA2B,SAAS,EAAEC;IAAtC,EAFF;EAAA,EADF;AAMD,CAPD;;AAUA,IAAMK,KAAK,GAAGT,0BAA0B,EAAxC;AAEA,eAAe,SAASU,GAAT,GAAe;EAE5B,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,gBAAgB,EAAC,OAAlC;MAA0C,aAAa,EAAE;QAAEF,WAAW,EAAE;MAAf,CAAzD;MAAA,WACE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,OAAnB;QAA2B,SAAS,EAAED;MAAtC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;QACE,IAAI,EAAC,UADP;QAEE,SAAS,EAAEF,KAFb;QAGE,OAAO,EAAE;UAAA,IAAGM,KAAH,QAAGA,KAAH;UAAA,OAAgB;YAAEH,WAAW,EAAE,IAAf;YAAqBI,KAAK,iBAAeD,KAAK,CAACE,MAAN,CAAaC;UAAtD,CAAhB;QAAA;MAHX,EAFF;IAAA;EADF,EADF;AAcD;AAAA;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}