{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Animatable from 'react-native-animatable';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { useTheme } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#009387\",\n      barStyle: \"light-content\"\n    }), _jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.text_header,\n        children: \"Welcome!\"\n      })\n    }), _jsxs(Animatable.View, {\n      animation: \"fadeInUpBig\",\n      style: [styles.footer, {\n        backgroundColor: colors.background\n      }],\n      children: [_jsx(Text, {\n        style: [styles.text_footer, {\n          color: colors.text\n        }],\n        children: \"Username\"\n      }), _jsxs(View, {\n        style: styles.action,\n        children: [_jsx(FontAwesome, {\n          name: \"user-o\",\n          color: colors.text,\n          size: 20\n        }), _jsx(TextInput, {\n          placeholder: \"Your Username\",\n          placeholderTextColor: \"#666666\",\n          style: [styles.textInput, {\n            color: colors.text\n          }],\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(val) {\n            return textInputChange(val);\n          },\n          onEndEditing: function onEndEditing(e) {\n            return handleValidUser(e.nativeEvent.text);\n          }\n        }), data.check_textInputChange ? _jsx(Animatable.View, {\n          animation: \"bounceIn\",\n          children: _jsx(Feather, {\n            name: \"check-circle\",\n            color: \"green\",\n            size: 20\n          })\n        }) : null]\n      }), data.isValidUser ? null : _jsx(Animatable.View, {\n        animation: \"fadeInLeft\",\n        duration: 500,\n        children: _jsx(Text, {\n          style: styles.errorMsg,\n          children: \"Username must be 4 characters long.\"\n        })\n      }), _jsx(Text, {\n        style: [styles.text_footer, {\n          color: colors.text,\n          marginTop: 35\n        }],\n        children: \"Password\"\n      }), _jsxs(View, {\n        style: styles.action,\n        children: [_jsx(Feather, {\n          name: \"lock\",\n          color: colors.text,\n          size: 20\n        }), _jsx(TextInput, {\n          placeholder: \"Your Password\",\n          placeholderTextColor: \"#666666\",\n          secureTextEntry: data.secureTextEntry ? true : false,\n          style: [styles.textInput, {\n            color: colors.text\n          }],\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(val) {\n            return handlePasswordChange(val);\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: updateSecureTextEntry,\n          children: data.secureTextEntry ? _jsx(Feather, {\n            name: \"eye-off\",\n            color: \"grey\",\n            size: 20\n          }) : _jsx(Feather, {\n            name: \"eye\",\n            color: \"grey\",\n            size: 20\n          })\n        })]\n      }), data.isValidPassword ? null : _jsx(Animatable.View, {\n        animation: \"fadeInLeft\",\n        duration: 500,\n        children: _jsx(Text, {\n          style: styles.errorMsg,\n          children: \"Password must be 8 characters long.\"\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: {\n            color: '#009387',\n            marginTop: 15\n          },\n          children: \"Forgot password?\"\n        })\n      }), _jsxs(View, {\n        style: styles.button,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.signIn,\n          onPress: function onPress() {\n            loginHandle(data.username, data.password);\n          },\n          children: _jsx(Text, {\n            style: [styles.textSign, {\n              color: '#fff'\n            }],\n            children: \"Sign In\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('SignUpScreen');\n          },\n          style: [styles.signIn, {\n            borderColor: '#009387',\n            borderWidth: 1,\n            marginTop: 15\n          }],\n          children: _jsx(Text, {\n            style: [styles.textSign, {\n              color: '#009387'\n            }],\n            children: \"Sign Up\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","Animatable","FontAwesome","Feather","useTheme","App","styles","container","header","text_header","footer","backgroundColor","colors","background","text_footer","color","text","action","textInput","val","textInputChange","e","handleValidUser","nativeEvent","data","check_textInputChange","isValidUser","errorMsg","marginTop","secureTextEntry","handlePasswordChange","updateSecureTextEntry","isValidPassword","button","signIn","loginHandle","username","password","textSign","navigation","navigate","borderColor","borderWidth","StyleSheet","create","flex","alignItems","justifyContent"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/App.js"],"sourcesContent":["import React from 'react';\nimport { \n    View, \n    Text, \n    TouchableOpacity, \n    TextInput,\n    Platform,\n    StyleSheet ,\n    StatusBar,\n    Alert\n} from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport Feather from 'react-native-vector-icons/Feather';\n\nimport { useTheme } from 'react-native-paper';\n\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n    <StatusBar backgroundColor='#009387' barStyle=\"light-content\"/>\n  <View style={styles.header}>\n      <Text style={styles.text_header}>Welcome!</Text>\n  </View>\n  <Animatable.View \n      animation=\"fadeInUpBig\"\n      style={[styles.footer, {\n          backgroundColor: colors.background\n      }]}\n  >\n      <Text style={[styles.text_footer, {\n          color: colors.text\n      }]}>Username</Text>\n      <View style={styles.action}>\n          <FontAwesome \n              name=\"user-o\"\n              color={colors.text}\n              size={20}\n          />\n          <TextInput \n              placeholder=\"Your Username\"\n              placeholderTextColor=\"#666666\"\n              style={[styles.textInput, {\n                  color: colors.text\n              }]}\n              autoCapitalize=\"none\"\n              onChangeText={(val) => textInputChange(val)}\n              onEndEditing={(e)=>handleValidUser(e.nativeEvent.text)}\n          />\n          {data.check_textInputChange ? \n          <Animatable.View\n              animation=\"bounceIn\"\n          >\n              <Feather \n                  name=\"check-circle\"\n                  color=\"green\"\n                  size={20}\n              />\n          </Animatable.View>\n          : null}\n      </View>\n      { data.isValidUser ? null : \n      <Animatable.View animation=\"fadeInLeft\" duration={500}>\n      <Text style={styles.errorMsg}>Username must be 4 characters long.</Text>\n      </Animatable.View>\n      }\n      \n\n      <Text style={[styles.text_footer, {\n          color: colors.text,\n          marginTop: 35\n      }]}>Password</Text>\n      <View style={styles.action}>\n          <Feather \n              name=\"lock\"\n              color={colors.text}\n              size={20}\n          />\n          <TextInput \n              placeholder=\"Your Password\"\n              placeholderTextColor=\"#666666\"\n              secureTextEntry={data.secureTextEntry ? true : false}\n              style={[styles.textInput, {\n                  color: colors.text\n              }]}\n              autoCapitalize=\"none\"\n              onChangeText={(val) => handlePasswordChange(val)}\n          />\n          <TouchableOpacity\n              onPress={updateSecureTextEntry}\n          >\n              {data.secureTextEntry ? \n              <Feather \n                  name=\"eye-off\"\n                  color=\"grey\"\n                  size={20}\n              />\n              :\n              <Feather \n                  name=\"eye\"\n                  color=\"grey\"\n                  size={20}\n              />\n              }\n          </TouchableOpacity>\n      </View>\n      { data.isValidPassword ? null : \n      <Animatable.View animation=\"fadeInLeft\" duration={500}>\n      <Text style={styles.errorMsg}>Password must be 8 characters long.</Text>\n      </Animatable.View>\n      }\n      \n\n      <TouchableOpacity>\n          <Text style={{color: '#009387', marginTop:15}}>Forgot password?</Text>\n      </TouchableOpacity>\n      <View style={styles.button}>\n          <TouchableOpacity\n              style={styles.signIn}\n              onPress={() => {loginHandle( data.username, data.password )}}\n          >\n          <Text style={[styles.textSign, {\n              color:'#fff'\n          }]}>Sign In</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n              onPress={() => navigation.navigate('SignUpScreen')}\n              style={[styles.signIn, {\n                  borderColor: '#009387',\n                  borderWidth: 1,\n                  marginTop: 15\n              }]}\n          >\n              <Text style={[styles.textSign, {\n                  color: '#009387'\n              }]}>Sign Up</Text>\n          </TouchableOpacity>\n      </View>\n  </Animatable.View>\n</View>\n);\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}