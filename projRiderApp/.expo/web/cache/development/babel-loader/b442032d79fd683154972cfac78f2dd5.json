{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar pendentDeliveries = [{\n  id: 1,\n  color: \"blue\",\n  text: \"Request n1\"\n}, {\n  id: 2,\n  color: \"red\",\n  text: \"Request n8\"\n}];\n\nvar DeliveriesScreen = function DeliveriesScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      deliveries = _useState2[0],\n      setDeliveries = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rider = _useState4[0],\n      setRider = _useState4[1];\n\n  useFocusEffect(React.useCallback(function () {\n    function getRiderInfo() {\n      var rider;\n      return _regeneratorRuntime.async(function getRiderInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"rider\"));\n\n            case 2:\n              rider = _context.sent;\n              rider = rider ? JSON.parse(rider) : null;\n              setRider(rider ? rider.id : null);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getRiderInfo();\n    fetch(\"$http://localhost:8080/deliveries/deliveriesByStatus\", {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setDeliveries(data);\n    }).catch(function (reason) {\n      console.log(reason);\n      setFetchError(true);\n    });\n  }, []));\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Pendent Deliveries\"\n    }), pendentDeliveries.map(function (prop, key) {\n      return _jsx(Text, {\n        style: {\n          backgroundColor: prop.color\n        },\n        children: prop.text\n      });\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        onPress: function onPress() {\n          return navigation.navigate('Delivery');\n        },\n        children: \"Delivery No929I293I23\"\n      })\n    })]\n  });\n};\n\nexport default DeliveriesScreen;\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 32\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","pendentDeliveries","id","color","text","DeliveriesScreen","useState","deliveries","setDeliveries","rider","setRider","useFocusEffect","useCallback","getRiderInfo","AsyncStorage","getItem","JSON","parse","fetch","headers","then","response","json","data","catch","reason","console","log","setFetchError","styles","container","title","map","prop","key","backgroundColor","loginBtn","loginText","navigation","navigate","StyleSheet","create","fontSize","flex","padding","paddingTop","paddingBottom","alignItems","justifyContent"],"sources":["/home/ricardo/Documents/3_ANO/TQS/petway/projRiderApp/src/screens/DeliveriesScreen.js"],"sourcesContent":["\n\n\nimport React from 'react';\nimport { View, Text, Button, StyleSheet, TouchableOpacity } from 'react-native';\n\n\nconst pendentDeliveries = [\n  {\n    id: 1,\n    color: \"blue\",\n    text: \"Request n1\"\n  },\n  {\n    id: 2,\n    color: \"red\",\n    text: \"Request n8\"\n  },\n];\n\nconst DeliveriesScreen = () => {\n\n  const [deliveries, setDeliveries] = useState(null);\n  const [rider, setRider] = useState(null);\n\n  // fetch data from the API\n  useFocusEffect(\n    React.useCallback(() => {\n\n      async function getRiderInfo() {\n        let rider = await AsyncStorage.getItem(\"rider\")\n        rider = rider ? JSON.parse(rider) : null\n        setRider(rider ? rider.id : null)\n      }\n\n      getRiderInfo()\n\n      fetch(\n        `$http://localhost:8080/deliveries/deliveriesByStatus`,\n        {\n            headers: {'Access-Control-Allow-Origin': '*'}\n        }\n      )\n      .then(response => response.json())\n      .then(data => {\n          setDeliveries(data)\n      })\n      .catch((reason) => {\n          console.log(reason)\n          setFetchError(true)\n      })\n    }, [])\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Pendent Deliveries</Text>\n      {pendentDeliveries.map((prop, key) => {\n        return (\n          <Text style={{backgroundColor : prop.color}}>{prop.text}</Text>\n        );\n      })}\n      <TouchableOpacity style={styles.loginBtn}>\n        <Text style={styles.loginText} onPress={() => navigation.navigate('Delivery')}>Delivery No929I293I23</Text>\n      </TouchableOpacity>\n    </View>\n\n  );\n};\n\nexport default DeliveriesScreen;\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n});\n"],"mappings":";;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAIA,IAAMC,iBAAiB,GAAG,CACxB;EACEC,EAAE,EAAE,CADN;EAEEC,KAAK,EAAE,MAFT;EAGEC,IAAI,EAAE;AAHR,CADwB,EAMxB;EACEF,EAAE,EAAE,CADN;EAEEC,KAAK,EAAE,KAFT;EAGEC,IAAI,EAAE;AAHR,CANwB,CAA1B;;AAaA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAE7B,gBAAoCC,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA0BF,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOG,KAAP;EAAA,IAAcC,QAAd;;EAGAC,cAAc,CACZX,KAAK,CAACY,WAAN,CAAkB,YAAM;IAEtB,SAAeC,YAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACoBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADpB;;YAAA;cACMN,KADN;cAEEA,KAAK,GAAGA,KAAK,GAAGO,IAAI,CAACC,KAAL,CAAWR,KAAX,CAAH,GAAuB,IAApC;cACAC,QAAQ,CAACD,KAAK,GAAGA,KAAK,CAACP,EAAT,GAAc,IAApB,CAAR;;YAHF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAMAW,YAAY;IAEZK,KAAK,yDAEH;MACIC,OAAO,EAAE;QAAC,+BAA+B;MAAhC;IADb,CAFG,CAAL,CAMCC,IAND,CAMM,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;IAAA,CANd,EAOCF,IAPD,CAOM,UAAAG,IAAI,EAAI;MACVf,aAAa,CAACe,IAAD,CAAb;IACH,CATD,EAUCC,KAVD,CAUO,UAACC,MAAD,EAAY;MACfC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAG,aAAa,CAAC,IAAD,CAAb;IACH,CAbD;EAcD,CAxBD,EAwBG,EAxBH,CADY,CAAd;EA4BA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,KAApB;MAAA;IAAA,EADF,EAEG9B,iBAAiB,CAAC+B,GAAlB,CAAsB,UAACC,IAAD,EAAOC,GAAP,EAAe;MACpC,OACE,KAAC,IAAD;QAAM,KAAK,EAAE;UAACC,eAAe,EAAGF,IAAI,CAAC9B;QAAxB,CAAb;QAAA,UAA8C8B,IAAI,CAAC7B;MAAnD,EADF;IAGD,CAJA,CAFH,EAOE,KAAC,gBAAD;MAAkB,KAAK,EAAEyB,MAAM,CAACO,QAAhC;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACQ,SAApB;QAA+B,OAAO,EAAE;UAAA,OAAMC,UAAU,CAACC,QAAX,CAAoB,UAApB,CAAN;QAAA,CAAxC;QAAA;MAAA;IADF,EAPF;EAAA,EADF;AAcD,CAhDD;;AAkDA,eAAelC,gBAAf;AAEA,IAAMwB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;EAC/BV,KAAK,EAAE;IACLW,QAAQ,EAAE;EADL,CADwB;EAI/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CADG;IAETC,OAAO,EAAE,EAFA;IAGTC,UAAU,EAAE,EAHH;IAITC,aAAa,EAAE,EAJN;IAKTX,eAAe,EAAE,MALR;IAMTY,UAAU,EAAE,QANH;IAOTC,cAAc,EAAE;EAPP;AAJoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}